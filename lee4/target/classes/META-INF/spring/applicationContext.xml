<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jpa="http://www.springframework.org/schema/data/jpa"
    xmlns:context="http://www.springframework.org/schema/context" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
    xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.1.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<!--1 引入属性文件，在配置中占位使用 -->
    <context:property-placeholder  location="classpath*:META-INF/spring/db.properties" />

	<!--2 容器自动扫描IOC组件 -->
    <context:component-scan base-package="com.cb.lee.domain" />
    
    <!--3配置C3P0数据源 -->
	<bean id="realDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<!--驱动类名 -->
		<property name="driverClass" value="${mysql.driver}" />
		<!-- url -->
		<property name="jdbcUrl" value="${mysql.url}" />
		<!-- 用户名 -->
		<property name="user" value="${mysql.uid}" />
		<!-- 密码 -->
		<property name="password" value="${mysql.password}" />
		<!-- 当连接池中的连接耗尽的时候c3p0一次同时获取的连接数 -->
		<property name="acquireIncrement" value="${mysql.acquireIncrement}"></property>
		<!-- 初始连接池大小 -->
		<property name="initialPoolSize" value="${mysql.initialPoolSize}"></property>
		<!-- 连接池中连接最小个数 -->
		<property name="minPoolSize" value="${mysql.minPoolSize}"></property>
		<!-- 连接池中连接最大个数 -->
		<property name="maxPoolSize" value="${mysql.maxPoolSize}"></property>
	</bean>

	<!-- 4 对原始的datasource做了一次代理，这样就能打印sql执行语句和表格现实的sql结果了 -->
	<bean id="dataSource" class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
		<constructor-arg name="realDataSource" ref="realDataSource" />
		<property name="logFormatter">
			<bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
				<property name="loggingType" value="MULTI_LINE" />
				<!-- <property name="margin" value="19" /> -->
				<property name="sqlPrefix" value="SQL:::" />
			</bean>
		</property>
	</bean>

    <!--5 会话工厂bean sqlSessionFactoryBean -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- 数据源 -->
        <property name="dataSource" ref="dataSource" />
        <!-- 指定要自动扫描的别名基础包，实现接口 -->
        <property name="typeAliasesPackage" value="com.cb.lee.domain.model" />
    </bean>

    <!-- 6 自动扫描对象关系映射 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
   		<!--指定会话工厂，如果当前上下文中只定义了一个则该属性可省去 -->
        <!-- <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property> -->
        <!-- 指定要自动扫描接口的基础包，实现接口 -->
        <property name="basePackage" value="com.cb.lee.domain.repository" />
    </bean>
    
	<!--7 声明式事务管理 -->
    <!--定义事物管理器，由spring管理事务 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <!-- <tx:annoation-driven/>只会查找和它在相同的应用上下文件中定义的bean上面的@Transactional注解，
   	如果你把它放在Dispatcher的应用上下文中，它只检查控制器（Controller）上的@Transactional注解，
   	而不是你services上的@Transactional注解。 -->
    <!--支持注解驱动的事务管理，指定事务管理器 -->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <bean id="passwordEncoder"
        class="org.springframework.security.crypto.password.NoOpPasswordEncoder">
    </bean>

    <bean class="org.dozer.spring.DozerBeanMapperFactoryBean">
        <property name="mappingFiles"
            value="classpath*:/META-INF/dozer/**/*-mapping.xml" />
    </bean>

</beans>
